{"version":3,"file":"runMergeContext.js","sourceRoot":"","sources":["../src/runMergeContext.ts"],"names":[],"mappings":"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","sourcesContent":["import { Bindings } from '@comunica/bindings-factory-context';\nimport { SetUnionContext } from '@comunica/actor-merge-binding-factory-context-union';\nimport { ActionContext} from '@comunica/core';\nimport { DataFactory } from 'rdf-data-factory';\nimport { Map } from 'immutable';\nimport type * as RDF from '@rdfjs/types';\nimport * as mathjs from 'mathjs'\n\n\nfunction opsPerSecondNonOverlappingOverlappingContext(nRuns: number){\n    const DF = new DataFactory();\n    let bindings: Bindings;\n    let bindingsOther: Bindings;\n\n    bindings = new Bindings(DF, Map<string, RDF.Term>([\n        [ 'a', DF.namedNode('ex:a') ],\n        [ 'b', DF.namedNode('ex:b') ],\n        [ 'c', DF.namedNode('ex:c') ],\n        [ 'd', DF.namedNode('ex:d') ],\n        [ 'e', DF.namedNode('ex:e') ]\n    ]),\n    { source: new SetUnionContext() },\n     new ActionContext({ source: [ 'ex:S1', 'ex:S2', 'ex:S3' ]})\n    );\n\n    bindingsOther = new Bindings(DF, Map<string, RDF.Term>([\n        [ 'f', DF.namedNode('ex:f') ],\n        [ 'g', DF.namedNode('ex:g') ],\n        [ 'h', DF.namedNode('ex:h') ],\n        [ 'i', DF.namedNode('ex:i') ],\n    ]),\n    { source: new SetUnionContext() },\n    new ActionContext({ source: [ 'ex:S1', 'ex:S2', 'ex:S5', 'ex:S6' ]})\n    );\n\n    const start = process.hrtime();\n    for (let i = 0; i<nRuns; i++){\n        const result = bindings.merge(bindingsOther);\n    }\n\n    const end = process.hrtime(start);\n    const endSeconds = (end[0]+ end[1] / Math.pow(10,9));\n    // console.log(`Ops/second merge non overlapping, ovelapping context: ${nRuns/endSeconds}`);\n    // console.log(`Total time overlapping: ${endSeconds}`);\n    return endSeconds\n}\n\nfunction opsPerSecondNonOverlappingEmptyContext(nRuns: number){\n    const DF = new DataFactory();\n    let bindings: Bindings;\n    let bindingsOther: Bindings;\n\n    bindings = new Bindings(DF, Map<string, RDF.Term>([\n        [ 'a', DF.namedNode('ex:a') ],\n        [ 'b', DF.namedNode('ex:b') ],\n        [ 'c', DF.namedNode('ex:c') ],\n        [ 'd', DF.namedNode('ex:d') ],\n        [ 'e', DF.namedNode('ex:e') ]\n    ]),\n    { source: new SetUnionContext() },\n     new ActionContext({})\n    );\n\n    bindingsOther = new Bindings(DF, Map<string, RDF.Term>([\n        [ 'f', DF.namedNode('ex:f') ],\n        [ 'g', DF.namedNode('ex:g') ],\n        [ 'h', DF.namedNode('ex:h') ],\n        [ 'i', DF.namedNode('ex:i') ],\n    ]),\n    {},\n    new ActionContext({})\n    );\n\n    const start = process.hrtime();\n    for (let i = 0; i<nRuns; i++){\n        const result = bindings.merge(bindingsOther);\n    }\n\n    const end = process.hrtime(start);\n    const endSeconds = (end[0]+ end[1] / Math.pow(10,9));\n    // console.log(`Ops/second merge non overlapping, no context: ${nRuns/endSeconds}`);\n    // console.log(`Total time overlapping: ${endSeconds}`);\n    return endSeconds\n}\n\nfunction opsPerSecondOverlappingOverlappingContext(nRuns: number){\n    const DF = new DataFactory();\n    let bindings: Bindings;\n    let bindingsOther: Bindings;\n\n    bindings = new Bindings(DF, Map<string, RDF.Term>([\n        [ 'a', DF.namedNode('ex:a') ],\n        [ 'b', DF.namedNode('ex:b') ],\n        [ 'c', DF.namedNode('ex:c') ],\n        [ 'd', DF.namedNode('ex:d') ],\n        [ 'e', DF.namedNode('ex:e') ]\n    ]),\n    { source: new SetUnionContext() },\n     new ActionContext({ source: [ 'ex:S1', 'ex:S2', 'ex:S3' ]})\n    );\n\n    bindingsOther = new Bindings(DF, Map<string, RDF.Term>([\n        [ 'd', DF.namedNode('ex:d') ],\n        [ 'a', DF.namedNode('ex:a') ],\n        [ 'b', DF.namedNode('ex:b') ],\n        [ 'f', DF.namedNode('ex:f') ],\n    ]),\n    { source: new SetUnionContext() },\n    new ActionContext({ source: [ 'ex:S1', 'ex:S2', 'ex:S5', 'ex:S6' ]})\n    );\n\n    const start = process.hrtime();\n    for (let i = 0; i<nRuns; i++){\n        const result = bindings.merge(bindingsOther);\n    }\n\n    const end = process.hrtime(start);\n    const endSeconds = (end[0]+ end[1] / Math.pow(10,9));\n    // console.log(`Ops/second merge overlapping, ovelapping context: ${nRuns/endSeconds}`);\n    // console.log(`Total time overlapping: ${endSeconds}`);\n    return endSeconds\n}\n\nfunction opsPerSecondOverlappingNoContext(nRuns: number){\n    const DF = new DataFactory();\n    let bindings: Bindings;\n    let bindingsOther: Bindings;\n\n    bindings = new Bindings(DF, Map<string, RDF.Term>([\n        [ 'a', DF.namedNode('ex:a') ],\n        [ 'b', DF.namedNode('ex:b') ],\n        [ 'c', DF.namedNode('ex:c') ],\n        [ 'd', DF.namedNode('ex:d') ],\n        [ 'e', DF.namedNode('ex:e') ]\n    ]),\n    { },\n    new ActionContext({})\n    );\n\n    bindingsOther = new Bindings(DF, Map<string, RDF.Term>([\n        [ 'd', DF.namedNode('ex:d') ],\n        [ 'a', DF.namedNode('ex:a') ],\n        [ 'b', DF.namedNode('ex:b') ],\n        [ 'f', DF.namedNode('ex:f') ],\n    ]),\n    { },\n    new ActionContext({})\n    );\n\n    const start = process.hrtime();\n    for (let i = 0; i<nRuns; i++){\n        const result = bindings.merge(bindingsOther);\n    }\n\n    const end = process.hrtime(start);\n    const endSeconds = (end[0]+ end[1] / Math.pow(10,9));\n    // console.log(`Ops/second merge overlapping no context: ${nRuns/endSeconds}`);\n    // console.log(`Total time overlapping: ${endSeconds}`);\n    return endSeconds;\n}\n\nfunction runExperiments(nReplications: number, nMerges: number){\n    const mean_1 = [];\n    const mean_2 = [];\n    const mean_3 = [];\n    const mean_4 = [];\n    for (let i = 0; i<nReplications; i++){\n        console.log(`Replication ${i+1}/${nReplications}`);\n        mean_1.push(nMerges/opsPerSecondNonOverlappingOverlappingContext(nMerges));\n        mean_2.push(nMerges/opsPerSecondOverlappingOverlappingContext(nMerges));\n        mean_3.push(nMerges/opsPerSecondNonOverlappingEmptyContext(nMerges));\n        mean_4.push(nMerges/opsPerSecondOverlappingNoContext(nMerges));\n    }\n    const std_1 = (mathjs.std(mean_1) as unknown) as number\n    const std_2 = (mathjs.std(mean_2) as unknown) as number\n    const std_3 = (mathjs.std(mean_3) as unknown) as number\n    const std_4 = (mathjs.std(mean_4) as unknown) as number\n\n\n    console.log(`Non overlapping bindings, overlapping context entries: ${mathjs.mean(mean_1)} ops/s ${std_1} `);\n    console.log(`Overlapping bindings, overlapping context entries: ${mathjs.mean(mean_2)} ops/s ${std_2} `);\n    console.log(`Non overlapping bindings, no context: ${mathjs.mean(mean_3)} ops/s ${std_3} `);\n    console.log(`Overlapping bindings, no context: ${mathjs.mean(mean_4)} ops/s ${std_4} `);\n\n}\nrunExperiments(20, 1000000);\n// opsPerSecondNonOverlappingOverlappingContext(10000000)\n// opsPerSecondOverlappingOverlappingContext(10000000)\n// opsPerSecondNonOverlappingEmptyContext(10000000);\n// opsPerSecondOverlappingNoContext(10000000);\n\n"]}